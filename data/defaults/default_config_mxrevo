
#----------------------------------------------------------
# 	Logitech MX Revolution btnx configuration file
#----------------------------------------------------------
#
###########################################################
#	READ ME FIRST!!!!!!!!!!!!!!!!!!!
###########################################################
#	This file is used to configure btnx's behavior. 
#	Lines are commented with # characters.
#
#	Basic structure of a button configuration
#   -------------------------------------------------------
#	Button
#	rawcode = 0x00000000
#	type	= 0
#	keycode	= KEY
#	mod1	= KEY
#	mod2	= KEY
#	mod3	= KEY
#	EndButton
#
#
#	Description of the structure
#	-------------------------------------------------------
#	The configuration field for a button must be started by
#	a "Button" line and closed by an "EndButton" line. Inside
#	the configuration you MUST specify:
#		- rawcode
#		- type
#		- keycode
#
#	The mod[1..3] fields are optional. The fields have the
#	following meanings:
#
#	rawcode: the byte stream sent to an event handler by the
#	mouse driver, used to identify the button. It must be a
#	32-bit base16 (hexadecimal) value preceded by "0x". You
#	probably should not change this value at all.
#
#	type: the type of event the button sends.
#	(Preset for your specific mouse buttons.)
#	If pressing the button sends a button press signal and
#	releasing it sends a release signal, the type is 0.
#	If pressing the button sends both press and release signals
#	simultaneously, the type is 1.
#	-This is usually necessary for mouse wheel events.
#
#	keycode: this is the actual value of the key or button to
#	send when the mouse button is pressed. Have a look at the
#	events file (located at /etc/btnx/events) for all possible
#	values. You can use any key (KEY_*) or button (BTN_*) events
#	in that file. The events beginning with KEY_ are for simulating
#	keyboard events and the events beginning with BTN_ are for
#	simulating mouse button events. Not all of them are handled by
#	X. You must use the string describing the event! Not the number.
#		-Special note: REL_WHEELFORWARD and REL_WHEELBACK are for
#		sending mouse wheel scroll events.
#
#	mod[1..3]: these are modifier key values. Examples are
#	shift (KEY_LEFTSHIFT, KEY_RIGHTSHIFT), ctrl (KEY_LEFTCTRL, ...),
#	alt, etc. You can combine up to three modifier keys together with
#	a keycode. You can even combine them with mouse button events.
#	You do not need to specify any mod keys if you don't need to.
#
#	Go ahead and specify a Button section for each one of your
#	mouse buttons. Use the example configurations below as a
#	reference.
#-----------------------------------------------------------



# These buttons are configured for the MX Revolution mouse.
#-----------------------------------------------------------

# Left mouse button
# NOTE: This is commented out. You probably don't want
# to send extra events when pressing this button!
#Button
#rawcode	=	0x01011000
#type 	=	0
#keycode	=	KEY_UNKNOWN
#EndButton


# Right mouse button
# NOTE: This is commented out. You probably don't want
# to send extra events when pressing this button!
#Button
#rawcode	=	0x01011100
#type 	=	0
#keycode	=	KEY_UNKNOWN
#EndButton

# Top wheel scroll down
# NOTE: This is commented out. You probably don't want
# to send extra events when pressing this button!
#Button
#rawcode	=	0x020008FF
#type 	=	1
#keycode	=	KEY_UNKNOWN
#EndButton


# Top wheel scroll up
# NOTE: This is commented out. You probably don't want
# to send extra events when pressing this button!
#Button
#rawcode	=	0x02000800
#type 	=	1
#keycode	=	KEY_UNKNOWN
#EndButton

# Thumb wheel forward. 
# Does a Ctrl+Alt+Left, useful for switching workspaces.
Button
rawcode	=	0x01011800
type 	=	0
keycode	=	KEY_LEFT
mod1 	=	KEY_LEFTCTRL
mod2 	=	KEY_LEFTALT
mod3	=	NONE
EndButton


# Thumb wheel back. 
# Does a Ctrl+Alt+Right, useful for switching workspaces.
Button
rawcode	=	0x01011A00
type 	=	0
keycode =	KEY_RIGHT
mod1	=	KEY_LEFTCTRL
mod2	=	KEY_LEFTALT
EndButton


# Thumb wheel press. 
# Does an Alt+LeftMouseButton. Useful for dragging windows.
Button
rawcode	=	0x01011C00
type 	=	0
keycode =	BTN_LEFT
mod1	=	KEY_LEFTALT
EndButton


# Thumb button back. 
# Does a Ctrl+PageDown. Useful for moving through tabs 
# (Firefox, gnome-terminal, etc.)
Button
rawcode	=	0x01011300
type 	=	0
keycode =	KEY_PAGEDOWN
mod1	=	KEY_LEFTCTRL
EndButton


# Thumb button forward. 
# Does a Ctrl+PageUp. Useful for moving through tabs 
# (Firefox, gnome-terminal, etc.)
Button
rawcode	=	0x01011400
type 	=	0
keycode =	KEY_PAGEUP
mod1	=	KEY_LEFTCTRL
EndButton


# Search key. 
# Simulates a mouse-wheel click.
Button
rawcode	=	0x01008800
type 	=	0
keycode =	BTN_MIDDLE
EndButton


# Top wheel right. 
# Does an Alt+Right. Ex. Firefox back
Button
rawcode	=	0x02000600
type 	=	1
keycode =	KEY_RIGHT
mod1	=	KEY_LEFTALT
EndButton


# Top wheel left. 
# Does an Alt+Left. Ex. Firefox forward
Button
rawcode	=	0x020006FF
type 	=	1
keycode =	KEY_LEFT
mod1	=	KEY_LEFTALT
EndButton

